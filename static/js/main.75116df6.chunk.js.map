{"version":3,"sources":["components/UploadForm.js","images/cat.jpg","jason-component/LightButton.js","App.js","reportWebVitals.js","index.js"],"names":["UploadForm","onInputChange","onButtonSubmit","InputGroup","FormControl","placeholder","onChange","Append","Button","variant","onClick","LightButton","name","isFriendly","className","type","class","App","determineColorFriendly","colors","console","log","map","color","red","green","blue","quarterRed","redBlueDifference","Math","abs","redGreenDifference","halfOfMaxGR","max","blueGreenDifference","halfOfMaxBG","setState","redGreenFriendly","yellowBlueFriendly","event","input","target","value","imageURL","state","axios","method","url","headers","accept","useQueryString","data","source","sourceType","then","response","dominantColors","imageUploaded","catch","error","cat","bind","Container","Row","Col","xl","Card","CardImg","src","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75116df6.chunk.js","sourcesContent":["import React from \"react\";\nimport { InputGroup, FormControl, Button } from \"react-bootstrap\";\n\nconst UploadForm = ({ onInputChange, onButtonSubmit }) => {\n  return (\n    <InputGroup>\n      <FormControl \n        placeholder=\"Paste your image URL here\"\n        onChange={onInputChange} \n      />\n      <InputGroup.Append>\n        <Button \n          variant=\"outline-secondary\"\n          onClick={onButtonSubmit}>\n          Let's Go\n        </Button>\n      </InputGroup.Append>\n    </InputGroup>\n  );\n};\n\nexport default UploadForm;\n","export default __webpack_public_path__ + \"static/media/cat.65b6d8ea.jpg\";","import React from 'react';\n\n\nconst LightButton = ({name, isFriendly}) => {\n\n\tif(isFriendly){\n\t  return (\n\t    <div className=\"mt-3 mb-3\">\n\t      <button type=\"button\" class=\"btn btn-outline-dark\">{name}</button>\n\t    </div>\n\t  )\n\t}else{\n\t\treturn (\n\t    <div className=\"mt-3 mb-3\">\n\t      <button type=\"button\" class=\"btn btn-danger\">{name}</button>\n\t    </div>\n\t  )\n\t}\n\n}\n\nexport default LightButton\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport Card from \"react-bootstrap/Card\";\nimport { Container, Row, Col, CardImg } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport UploadForm from \"./components/UploadForm\";\nimport cat from \"./images/cat.jpg\";\nimport LightButton from \"./jason-component/LightButton\";\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      imageUploaded: false,\n      input: \"\",\n      imageURL: cat,\n      redGreenFriendly: true,\n      yellowBlueFriendly: true,\n      dominantColors: []\n    };\n\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onButtonSubmit = this.onButtonSubmit.bind(this);\n    this.determineColorFriendly = this.determineColorFriendly.bind(this);\n  }\n\n  // If r > 100 and g & b are 1/4r then it is \"red\"\n  // If g > 100 and r & b are 1/4g then it is \"green\"\n  // If the image contains green or red then it is not \"color friendly\"\n  // colors is an array of objects with red, blue, green keys\n  determineColorFriendly = (colors) => {\n\n    console.log(colors);\n    colors.map((color) => {\n      var {red, green, blue} = color;\n      var quarterRed = 0.25 * red;\n      var quarterGreen = 0.25 * green;\n\n      var redBlueDifference = Math.abs(red-blue);\n\n      var redGreenDifference = Math.abs(red-green);\n      var maxGreenRed = Math.max(green, red);\n      var halfOfMaxGR = 0.5 * maxGreenRed;\n\n      var blueGreenDifference = Math.abs(blue-green);\n      var maxBlueGreen = Math.max(blue, green);\n      var halfOfMaxBG = 0.5 * maxBlueGreen;\n\n      if (red >= 100 && green <= quarterRed && blue <= quarterRed) {\n        this.setState({redGreenFriendly: false})\n        console.log(\"a\");\n      }else if(redBlueDifference <= 20 && green - redBlueDifference >= 20){\n        this.setState({redGreenFriendly: false});\n        console.log(\"b\");\n      }\n\n\n      if (redGreenDifference <= 20 && blue <= halfOfMaxGR) {\n        this.setState({yellowBlueFriendly: false})\n        console.log(\"c\");\n      }else if(blueGreenDifference <= 20 && red <= halfOfMaxBG){\n        this.setState({yellowBlueFriendly: false});\n        console.log(\"d\");\n      }\n    })\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  //When we press the submit button, we call the API\n  onButtonSubmit = () => {\n    this.setState({imageURL: this.state.input});\n    this.setState({redGreenFriendly: true});\n    this.setState({yellowBlueFriendly: true});\n\n    axios({\n      method: \"POST\",\n      url:\n        \"https://image-color-tag.p.rapidapi.com/cloudVision/imageAttributesDetection\",\n      headers: {\n        \"content-type\": \"application/json\",\n        \"x-rapidapi-host\": \"image-color-tag.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"0e22180accmsh9a496466775e3d1p1b5633jsne17fc2e367fa\",\n        accept: \"application/json\",\n        useQueryString: true,\n      },\n      data: {\n        source: this.state.imageURL,\n        sourceType: \"url\",\n      },\n    })\n    .then((response) => {\n      const data = response.data.dominantColors;\n      this.determineColorFriendly(data);\n      this.setState({imageUploaded: true});\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <h1 className=\"text-center color-title\">\n            {\" \"}\n            <i className=\"fas fa-eye\"></i> ColorFriendly\n          </h1>\n          <Row className=\"justify-content-md-center\">\n            <Col xl=\"6\">\n              <Card className=\"mb-4\">\n                <CardImg variant=\"top\" src = {this.state.imageURL} />\n              </Card>\n              <UploadForm\n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n              />\n            </Col>\n          </Row>\n        </Container>\n        <Container className=\"text-center\">\n          <LightButton name=\"Red-Green Not Friendly\" isFriendly = {this.state.redGreenFriendly}/>\n          <LightButton name=\"Yellow-Blue Not Friendly\" isFriendly = {this.state.yellowBlueFriendly}/>\n        </Container>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}